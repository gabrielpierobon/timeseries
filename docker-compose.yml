# docker-compose.yml

version: '3'

services:
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=airflow
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
    volumes:
      - .:/home/jovyan/work
    ports:
      - "8888:8888"
    working_dir: /home/jovyan/work
    command: start-notebook.sh --NotebookApp.token=''

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    user: "1000:0"
    environment:
      - LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__WEBSERVER__SECRET_KEY=abcd1234efgh5678
      - JUPYTER_DATA_PATH=/home/jovyan/work
      - AIRFLOW__CORE__DAGS_FOLDER=/home/jovyan/work/dags  # Set the DAG folder location here
      - AIRFLOW__CORE__BASE_LOG_FOLDER=/home/jovyan/work/logs  # Set the log folder location here
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=airflow
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
    volumes:
      - .:/home/jovyan/work
    command: webserver
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    user: "1000:0"
    environment:
      - LOAD_EXAMPLES=False
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__WEBSERVER__SECRET_KEY=abcd1234efgh5678
      - JUPYTER_DATA_PATH=/home/jovyan/work
      - AIRFLOW__CORE__DAGS_FOLDER=/home/jovyan/work/dags  # Set the DAG folder location here
      - AIRFLOW__CORE__BASE_LOG_FOLDER=/home/jovyan/work/logs  # Set the log folder location here
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=airflow
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
    volumes:
      - .:/home/jovyan/work
    command: scheduler
    depends_on:
      - postgres

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@example.com'  # Set your email
      PGADMIN_DEFAULT_PASSWORD: 'admin'          # Set a strong password
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - postgres

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.7.1
    ports:
      - "5000:5000"
    volumes:
      - .:/home/jovyan/work  # This line maps the current directory on the host to /home/jovyan/work in the container
    command: ["mlflow", "server", "--backend-store-uri", "/home/jovyan/work/mlruns", "--default-artifact-root", "/home/jovyan/work/mlruns", "--host", "0.0.0.0", "--port", "5000"]

  minio:
    image: minio/minio
    volumes:
      - minio_data:/data
    ports:
      - "9001:9000"  # Expose port 9001 on host and map it to 9000 in the container
      - "9091:9090"  # Add this line if you want to expose the MinIO Console
    command: server /data --console-address ":9090"  # Specify console address if you're exposing it
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123

volumes:
  postgres_data:
  pgadmin_data:
  grafana_data:
  mlruns:
  minio_data:
